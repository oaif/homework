V0：
#include<stdio.h>
#include<string.h>
int main()
{
	char strExp[]="3+4";
	int left=strExp[0]-'0';
	int right=strExp[2]-'0';
	int res=left+right;
	printf("res=%d\n",res);
	return 0;
}

V1：
#include<stdio.h>
#include<string.h>
int main()
{
	char strExp[]="1+2+2+1+2+5+4-1-3+4-8";
	int res=strExp[0]-'0';
	int i;
	for(i=1;i<strlen(strExp);i++)
	{
		if(strExp[i]=='+')
		{
			int right=strExp[i+1]-'0';
			res=res+right;
			i++;
		}
		if(strExp[i]=='-')
		{
			int right=strExp[i+1]-'0';
			res=res-right;
			i++;
		}
	}
	printf("res=%d\n",res);
	return 0;
}

V2：
#include<stdio.h>
#include<string.h>
int main()
{
	char strExp[]="2*2/4*1/1*2*3/2";
	int res=strExp[0]-'0';
	int i;
	for(i=1;i<strlen(strExp);i++)
	{
		if(strExp[i]=='*')
		{
			int right=strExp[i+1]-'0';
			res=res*right;
			i++;
		}
		if(strExp[i]=='/')
		{
			int right=strExp[i+1]-'0';
			res=res/right;
			i++;
		}
	}
	printf("res=%d\n",res);
	return 0;
}

V3:
#include<stdio.h>
#include<string.h>
int main()
{
	char strExp[]="2+2*3+2/2-1";
	int a=strExp[0]-'0';
	int b=strExp[2]-'0';
	int c=strExp[4]-'0';
	int d=strExp[6]-'0';
	int e=strExp[8]-'0';
	int f=strExp[10]-'0';
	int sum=a+b*c+d/e-f;
	printf("sum=%d\n",sum);
}

V4:
#include <stdio.h>
#include <string.h>	
#include <stdlib.h>
int isOperator(char C)
{
	if(C=='+'||C=='-'||C=='*'||C=='/')
		return 1;
	else
		return 0;
}
void moveOperator(char *p)
{
	while(*p='\0')
	{
		*p=*(p+1);
		p++;
	}
}
void moveOperand(float *p,float *end)
{
	while(p!=end)
	{
		*p=*(p+1);
		p++;
	}
}
int main () 
{
	//char strExp[]="1-2.5*4+10.2/5.1";
	printf("please input a string expression including + - * /\n");
	char strExp[100];
	scanf("%s",strExp);
	char operators[100]={'\0'};
	float operands[100];
	int operatorsIndex=0;
	for(int i=0;i<strlen(strExp);i++)
	{
		if(isOperator(strExp[i]))
		{
			operators[operatorsIndex]=strExp[i];
			operatorsIndex++;
		}
	}
	int operandsIndex=0;
	for(int i=0;i<strlen(strExp);i++)
	{
		char temp[100]={'\0'};
		int tempIndex=0;
		while(!isOperator(strExp[i]))
		{
			temp[tempIndex]=strExp[i];
			i++;
			tempIndex++;
		}
		float floatV=atof(temp);
		operands[operandsIndex++]=floatV;
	}
	for(int i=0;i<operandsIndex;i++)
		printf("%0.1f\n",operands[i]);
	char *poperator=operators;
	float *poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='*')
		{
			float leftOperand=*poperand;
			float rightOperand=*(poperand+1);
			float res=leftOperand*rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsIndex--]);
		}
		else if(*poperator=='/')
		{
			float leftOperand=*poperand;
			float rightOperand=*(poperand+1);
			float res=leftOperand/rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsIndex--]);
		}
		else
		{
			poperator++;
			poperand++;
		}
	}
	poperator=operators;
	poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='+')
		{
			float leftOperand=*poperand;
			float rightOperand=*(poperand+1);
			float res=leftOperand+rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsIndex--]);
		}
		else if(*poperator=='-')
		{
			float leftOperand=*poperand;
			float rightOperand=*(poperand+1);
			float res=leftOperand-rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsIndex--]);
		}
	}
	printf("the result is %0.2f\n",operands[0]);
	return 0;
}
